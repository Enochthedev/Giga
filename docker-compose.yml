services:
  # Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: platform_user
      POSTGRES_PASSWORD: platform_pass
      POSTGRES_DB: platform_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U platform_user -d platform_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./services/gateway:/app/services/gateway
      - ./shared:/app/shared

  # Auth Service
  auth:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
      target: development
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://platform_user:platform_pass@postgres:5432/auth_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/auth:/app/services/auth
      - ./shared:/app/shared

  # Ecommerce Service
  ecommerce:
    build:
      context: .
      dockerfile: services/ecommerce/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://platform_user:platform_pass@postgres:5432/ecommerce_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth:3001
      - NOTIFICATION_SERVICE_URL=http://notification:3004
    depends_on:
      - postgres
      - redis
      - auth
    volumes:
      - ./services/ecommerce:/app/services/ecommerce
      - ./shared:/app/shared

  # Hotel Service
  hotel:
    build:
      context: .
      dockerfile: services/hotel/Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://platform_user:platform_pass@postgres:5432/hotel_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth:3001
      - NOTIFICATION_SERVICE_URL=http://notification:3004
    depends_on:
      - postgres
      - redis
      - auth
    volumes:
      - ./services/hotel:/app/services/hotel
      - ./shared:/app/shared

  # Notification Service
  notification:
    build:
      context: .
      dockerfile: services/notification/Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://platform_user:platform_pass@postgres:5432/notification_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth:3001
      - ECOMMERCE_SERVICE_URL=http://ecommerce:3002
      - HOTEL_SERVICE_URL=http://hotel:3003
      # Email providers
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - AWS_SES_ACCESS_KEY_ID=${AWS_SES_ACCESS_KEY_ID}
      - AWS_SES_SECRET_ACCESS_KEY=${AWS_SES_SECRET_ACCESS_KEY}
      # SMS providers
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      # Push notification providers
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/notification:/app/services/notification
      - ./shared:/app/shared

  # Upload Service
  upload:
    build:
      context: .
      dockerfile: services/upload/Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://platform_user:platform_pass@postgres:5432/upload_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth:3001
      - JWT_SECRET=upload-service-jwt-secret-key-development-only
      - STORAGE_TYPE=local
      - STORAGE_BASE_PATH=/app/uploads
      - MAX_FILE_SIZE=10485760
      - ENABLE_IMAGE_PROCESSING=true
      - ENABLE_METRICS=true
    depends_on:
      - postgres
      - redis
      - auth
    volumes:
      - ./services/upload:/app/services/upload
      - ./shared:/app/shared
      - upload_data:/app/uploads

volumes:
  postgres_data:
  redis_data:
  upload_data: